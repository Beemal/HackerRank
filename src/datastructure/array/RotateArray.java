package datastructure.array;
//è¿”å›žå°†ä¸€ç»´æ•°ç»„å?‘å?³æ—‹è½¬kä¸ªä½?ç½®çš„ç»“æžœã€‚æ¯”å¦‚ï¼Œä¸€ç»´æ•°ç»„{1,2,3,4,5}ï¼Œk=2æ—¶ï¼Œè¿”å›žç»“æžœæ˜¯{4,5,1,2,3}ã€‚
//è¦?æ±‚å¸¸æ•°çº§ç©ºé—´å¤?æ?‚åº¦ï¼Œå…?è®¸ä¿®æ”¹åŽŸæœ‰æ•°ç»„ã€‚
public class RotateArray {

	// å¦‚æžœå…?è®¸é¢?å¤–åˆ†é…?çº¿æ€§ç©ºé—´ï¼Œé‚£ä¹ˆå?¯ä»¥é”™ä½?å¤?åˆ¶åŽŸæœ‰æ•°ç»„çš„å…ƒç´ ã€‚
	static int[] rotateK(int[] A, int k) {
		if (A == null || k >= A.length)
			return A;

		int[] B = new int[A.length];
		// å?Žé?¢kä¸ªå¤?åˆ¶åˆ°å‰?é?¢
		System.arraycopy(A, A.length - k, B, 0, k);
		// å‰?é?¢çš„a.length-1-kä¸ªå¤?åˆ¶åˆ°å?Žé?¢
		System.arraycopy(A, 0, B, A.length - k - 1, A.length - k);
		return B;
	}
	


	/*
	 * å¦‚æžœå…?è®¸ä¿®æ”¹åŽŸæœ‰æ•°ç»„ï¼Œé‚£ä¹ˆæˆ‘ä»¬å?¯ä»¥é€šè¿‡ä¸‰æ¬¡å??è½¬ç»„æ?¥å®žçŽ°æ•°ç»„æ—‹è½¬ï¼Œï¼Œä¸?éœ€è¦?ç”³è¯·é¢?å¤–ç©ºé—´ï¼Œ
	 * å¹¶ä¸”æ¯?æ¬¡ å??è½¬æ—¶é—´ä¸ºOï¼ˆnï¼‰ï¼Œä»Žè€Œå®žçŽ°çº¿æ€§çš„æ—¶é—´å¤?æ?‚åº¦å’Œå¸¸æ•°çº§çš„ç©ºé—´å¤?æ?‚åº¦ã€‚
	 */
	 static int [] rotateK_2(int [] A, int k){
	        if(A==null|| k>=A.length) return A;
	        reverse(A,0,A.length-1);//å??è½¬æ•´ä¸ªæ•°ç»„
	        reverse(A,0,k-1);//å??è½¬å‰?kä¸ªæ•°
	        reverse(A,k,A.length-1);//å??è½¬å‰©ä¸‹çš„æ•°
	        return A;
	    }

	    //è¾…åŠ©å‡½æ•°ï¼Œå??è½¬ä»Žstartåˆ°endçš„æ•°
	    static  void reverse (int [] A,int start,int end){
	        while(start<end){
	            //äº¤æ?¢A[start]å’ŒA[end]ä¸¤ä¸ªæ•°
	            int temp=A[start];
	            A[start]=A[end];
	            A[end]=temp;
	            start++;
	            end--;
	        }
	    }
	    
		public static void main(String[] args) {
			int a[] = { 1, 2, 3, 4, 5 };
			int b[] = rotateK(a, 2);
			for (int i = 0; i < b.length; i++)
				System.out.print(b[i]);
			
			System.out.println();
			
			int c[] =  rotateK_2(a,2);
		        for(int i=0;i<a.length;i++)
		        System.out.print(c[i]);
		}
}
